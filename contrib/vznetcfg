#!/usr/bin/env bash
#
#  Copyright (C) 2000-2008, Parallels, Inc. All rights reserved.
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# This version of vznetcfg was modified to automatically attach a veth to the
# named bridge.
#

VZNETCFG='/etc/vz/vznet.conf'

[ -f "$VZNETCFG" ] && source "$VZNETCFG"

usage()
{
    echo >&2 "vznetcfg init veth <dev>"
}

init_veth()
{
    local dev; dev="$1"

    ip link set "$dev" up

    CONFIGFILE=/etc/vz/conf/$VEID.conf
    . $CONFIGFILE

    # check if we need to set up a bridge
    IFACES=$(echo $NETIF | sed 's/;/ /g')
    for ifdata in $IFACES; do
        ifname=
        bridge=
        host_ifname=
        NETIF_OPTIONS=$(echo $ifdata | sed 's/,/\n/g')
        for str in $NETIF_OPTIONS; do
            # getting 'ifname' parameter value
            if [[ "$str" =~ ^ifname= ]]; then
                # remove the parameter name from the string (along with '=')
                ifname=${str#*=}
            fi
            if [[ "$str" =~ ^bridge= ]]; then
                # remove the parameter name from the string (along with '=')
                bridge=${str#*=}
            fi
            # getting 'host_ifname' parameter value
            if [[ "$str" =~ ^host_ifname= ]]; then
                # remove the parameter name from the string (along with '=')
                host_ifname=${str#*=}
            fi
        done

        if [[ $dev == $host_ifname ]]; then
            configure_bridge $host_ifname $bridge $ifname
            exit $?
        fi
    done
}

configure_bridge() {

    local host_ifname="$1"
    local bridge="$2"
    local ifname="$3"

    echo "Adding interface $host_ifname to bridge $bridge on CT0 for CT$VEID"
    /sbin/ifconfig $host_ifname 0 || return 1
    /usr/sbin/brctl addif $bridge $host_ifname || return 1

    return 0
}

# Call the external script if defined
if [ -n "$EXTERNAL_SCRIPT" -a -x "$EXTERNAL_SCRIPT" ]; then
    export VEID
    exec "$EXTERNAL_SCRIPT" $@
fi

if test $# -le 2; then
    usage
    exit 0
fi

CMD="$1"
case "$CMD$2" in
    initveth)
        if test $# -ne 3; then
            usage
            exit 1
        fi
        init_veth "$3"
        exit 1
        ;;
    *)
        echo "invalid action"
        exit 1
        ;;
esac
exit 0
